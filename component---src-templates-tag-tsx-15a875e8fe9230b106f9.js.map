{"version":3,"sources":["webpack:///./src/templates/tag.tsx"],"names":["Tags","pageContext","data","tag","allMarkdownRemark","edges","totalCount","tagHeader","title","description","map","node","slug","fields","frontmatter","date","key","to","pageQuery"],"mappings":"4FAAA,8GA6CeA,UApC2D,SAAC,GAGrE,IAFJC,EAEI,EAFJA,YACAC,EACI,EADJA,KAEQC,EAAQF,EAARE,IADJ,EAE0BD,EAAKE,kBAA3BC,EAFJ,EAEIA,MAAOC,EAFX,EAEWA,WACTC,EAAeD,EAAN,SACE,IAAfA,EAAmB,GAAK,KADX,iBAEEH,EAFF,IAIf,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEK,MAAOL,EACPM,YAAW,mCAAqCN,EAArC,MAEb,4BAAKI,GACL,4BACGF,EAAMK,KAAI,YAAc,IAAXC,EAAW,EAAXA,KACNC,EAAOD,EAAKE,OAAOD,KACnBJ,EAAQG,EAAKG,YAAYN,MACzBO,EAAOJ,EAAKG,YAAYC,KAC9B,OACE,wBAAIC,IAAKJ,GACP,kBAAC,OAAD,CAAMK,GAAIL,GACPJ,EADH,MACaO,QAMrB,kBAAC,OAAD,CAAME,GAAG,SAAT,cAOC,IAAMC,EAAY","file":"component---src-templates-tag-tsx-15a875e8fe9230b106f9.js","sourcesContent":["import { Link, graphql } from 'gatsby'\nimport Layout from '../components/Layout'\nimport React from 'react'\nimport SEO from '../components/SEO'\nimport { TagsQuery } from './__generated__/TagsQuery'\n\n/**\n * Page template for a given tag, listing all the related posts\n */\nconst Tags: React.FC<{ pageContext: { tag: string }; data: TagsQuery }> = ({\n  pageContext,\n  data,\n}) => {\n  const { tag } = pageContext\n  const { edges, totalCount } = data.allMarkdownRemark\n  const tagHeader = `${totalCount} post${\n    totalCount === 1 ? '' : 's'\n  } tagged with \"${tag}\"`\n\n  return (\n    <Layout>\n      <SEO\n        title={tag}\n        description={`List of blog posts tagged with '${tag}'`}\n      />\n      <h1>{tagHeader}</h1>\n      <ol>\n        {edges.map(({ node }) => {\n          const slug = node.fields.slug\n          const title = node.frontmatter.title\n          const date = node.frontmatter.date\n          return (\n            <li key={slug}>\n              <Link to={slug}>\n                {title} - {date}\n              </Link>\n            </li>\n          )\n        })}\n      </ol>\n      <Link to=\"/tags\">All tags</Link>\n    </Layout>\n  )\n}\n\nexport default Tags\n\nexport const pageQuery = graphql`\n  query TagsQuery($tag: String) {\n    allMarkdownRemark(\n      limit: 2000\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { tags: { in: [$tag] } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n            date(formatString: \"yyyy-MM-DD\")\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}